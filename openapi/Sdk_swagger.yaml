basePath: /api
consumes:
- application/json
definitions:
  authenticator.Account:
    properties:
      metadata:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      sub:
        type: string
    type: object
  gateway.Error:
    properties:
      code:
        type: string
      error:
        type: string
    type: object
  rest.AccountGetRes:
    properties:
      account:
        $ref: '#/definitions/authenticator.Account'
    type: object
  rest.Application:
    properties:
      created_at:
        type: integer
      id:
        type: string
      name:
        type: string
      updated_at:
        type: integer
      ws_id:
        type: string
    type: object
  rest.ApplicationCreateReq:
    properties:
      name:
        type: string
    type: object
  rest.ApplicationCreateRes:
    properties:
      created_at:
        type: integer
      id:
        type: string
      name:
        type: string
      updated_at:
        type: integer
      ws_id:
        type: string
    type: object
  rest.ApplicationDeleteRes:
    properties:
      created_at:
        type: integer
      id:
        type: string
      name:
        type: string
      updated_at:
        type: integer
      ws_id:
        type: string
    type: object
  rest.ApplicationGetRes:
    properties:
      created_at:
        type: integer
      id:
        type: string
      name:
        type: string
      updated_at:
        type: integer
      ws_id:
        type: string
    type: object
  rest.ApplicationListRes:
    properties:
      count:
        type: integer
      data:
        items:
          $ref: '#/definitions/rest.Application'
        type: array
    type: object
  rest.ApplicationUpdateReq:
    properties:
      name:
        type: string
    type: object
  rest.ApplicationUpdateRes:
    properties:
      created_at:
        type: integer
      id:
        type: string
      name:
        type: string
      updated_at:
        type: integer
      ws_id:
        type: string
    type: object
  rest.Endpoint:
    properties:
      app_id:
        type: string
      created_at:
        type: integer
      id:
        type: string
      method:
        type: string
      name:
        type: string
      updated_at:
        type: integer
      uri:
        type: string
    type: object
  rest.EndpointCreateReq:
    properties:
      app_id:
        type: string
      method:
        example: POST
        type: string
      name:
        type: string
      uri:
        example: https://example.com
        type: string
    type: object
  rest.EndpointCreateRes:
    properties:
      app_id:
        type: string
      created_at:
        type: integer
      id:
        type: string
      method:
        type: string
      name:
        type: string
      updated_at:
        type: integer
      uri:
        type: string
    type: object
  rest.EndpointDeleteRes:
    properties:
      app_id:
        type: string
      created_at:
        type: integer
      id:
        type: string
      method:
        type: string
      name:
        type: string
      updated_at:
        type: integer
      uri:
        type: string
    type: object
  rest.EndpointGetRes:
    properties:
      app_id:
        type: string
      created_at:
        type: integer
      id:
        type: string
      method:
        type: string
      name:
        type: string
      updated_at:
        type: integer
      uri:
        type: string
    type: object
  rest.EndpointListRes:
    properties:
      count:
        type: integer
      data:
        items:
          $ref: '#/definitions/rest.Endpoint'
        type: array
    type: object
  rest.EndpointRule:
    properties:
      condition_expression:
        type: string
      condition_source:
        type: string
      created_at:
        type: integer
      ep_id:
        type: string
      exclusionary:
        type: boolean
      id:
        type: string
      name:
        type: string
      priority:
        type: integer
      updated_at:
        type: integer
    type: object
  rest.EndpointRuleCreateReq:
    properties:
      condition_expression:
        type: string
      condition_source:
        type: string
      ep_id:
        type: string
      exclusionary:
        type: boolean
      name:
        type: string
      priority:
        type: integer
    type: object
  rest.EndpointRuleCreateRes:
    properties:
      condition_expression:
        type: string
      condition_source:
        type: string
      created_at:
        type: integer
      ep_id:
        type: string
      exclusionary:
        type: boolean
      id:
        type: string
      name:
        type: string
      priority:
        type: integer
      updated_at:
        type: integer
    type: object
  rest.EndpointRuleDeleteRes:
    properties:
      condition_expression:
        type: string
      condition_source:
        type: string
      created_at:
        type: integer
      ep_id:
        type: string
      exclusionary:
        type: boolean
      id:
        type: string
      name:
        type: string
      priority:
        type: integer
      updated_at:
        type: integer
    type: object
  rest.EndpointRuleGetRes:
    properties:
      condition_expression:
        type: string
      condition_source:
        type: string
      created_at:
        type: integer
      ep_id:
        type: string
      exclusionary:
        type: boolean
      id:
        type: string
      name:
        type: string
      priority:
        type: integer
      updated_at:
        type: integer
    type: object
  rest.EndpointRuleListRes:
    properties:
      count:
        type: integer
      data:
        items:
          $ref: '#/definitions/rest.EndpointRule'
        type: array
    type: object
  rest.EndpointRuleUpdateReq:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  rest.EndpointRuleUpdateRes:
    properties:
      condition_expression:
        type: string
      condition_source:
        type: string
      created_at:
        type: integer
      ep_id:
        type: string
      exclusionary:
        type: boolean
      id:
        type: string
      name:
        type: string
      priority:
        type: integer
      updated_at:
        type: integer
    type: object
  rest.EndpointUpdateReq:
    properties:
      method:
        type: string
      name:
        type: string
    type: object
  rest.EndpointUpdateRes:
    properties:
      app_id:
        type: string
      created_at:
        type: integer
      id:
        type: string
      method:
        type: string
      name:
        type: string
      updated_at:
        type: integer
      uri:
        type: string
    type: object
  rest.MessageCreateReq:
    properties:
      app_id:
        type: string
      body:
        additionalProperties: true
        type: object
      headers:
        additionalProperties:
          type: string
        type: object
      type:
        example: testing.debug
        type: string
    type: object
  rest.MessageCreateRes:
    properties:
      id:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
info:
  contact:
    email: support@kanthorlabs.com
    name: Kanthor Support
    url: http://kanthorlabs.com/support
  description: SDK API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://kanthorlabs.com/terms/
  title: Kanthor SDK API
  version: "1.0"
paths:
  /account/me:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.AccountGetRes'
        default:
          description: ""
          schema:
            $ref: '#/definitions/gateway.Error'
      security:
      - Authorization: []
      tags:
      - account
  /application:
    get:
      parameters:
      - description: search keyword
        in: query
        name: _q
        type: string
      - default: 10
        description: limit returning records
        in: query
        name: _limit
        type: integer
      - default: 0
        description: current requesting page
        in: query
        name: _page
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.ApplicationListRes'
        default:
          description: ""
          schema:
            $ref: '#/definitions/gateway.Error'
      security:
      - Authorization: []
      - WorkspaceId: []
      tags:
      - application
    post:
      parameters:
      - description: application properties
        in: body
        name: props
        required: true
        schema:
          $ref: '#/definitions/rest.ApplicationCreateReq'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/rest.ApplicationCreateRes'
        default:
          description: ""
          schema:
            $ref: '#/definitions/gateway.Error'
      security:
      - Authorization: []
      - WorkspaceId: []
      tags:
      - application
  /application/{app_id}:
    delete:
      parameters:
      - description: application id
        in: path
        name: app_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.ApplicationDeleteRes'
        default:
          description: ""
          schema:
            $ref: '#/definitions/gateway.Error'
      security:
      - Authorization: []
      - WorkspaceId: []
      tags:
      - application
    get:
      parameters:
      - description: application id
        in: path
        name: app_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.ApplicationGetRes'
        default:
          description: ""
          schema:
            $ref: '#/definitions/gateway.Error'
      security:
      - Authorization: []
      - WorkspaceId: []
      tags:
      - application
    patch:
      parameters:
      - description: application id
        in: path
        name: app_id
        required: true
        type: string
      - description: application properties
        in: body
        name: props
        required: true
        schema:
          $ref: '#/definitions/rest.ApplicationUpdateReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.ApplicationUpdateRes'
        default:
          description: ""
          schema:
            $ref: '#/definitions/gateway.Error'
      security:
      - Authorization: []
      - WorkspaceId: []
      tags:
      - application
  /endpoint:
    get:
      parameters:
      - description: application id
        in: query
        name: app_id
        type: string
      - description: search keyword
        in: query
        name: _q
        type: string
      - default: 10
        description: limit returning records
        in: query
        name: _limit
        type: integer
      - default: 0
        description: current requesting page
        in: query
        name: _page
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.EndpointListRes'
        default:
          description: ""
          schema:
            $ref: '#/definitions/gateway.Error'
      security:
      - Authorization: []
      - WorkspaceId: []
      tags:
      - endpoint
    post:
      parameters:
      - description: endpoint properties
        in: body
        name: props
        required: true
        schema:
          $ref: '#/definitions/rest.EndpointCreateReq'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/rest.EndpointCreateRes'
        default:
          description: ""
          schema:
            $ref: '#/definitions/gateway.Error'
      security:
      - Authorization: []
      - WorkspaceId: []
      tags:
      - endpoint
  /endpoint/{ep_id}:
    delete:
      parameters:
      - description: endpoint id
        in: path
        name: ep_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.EndpointDeleteRes'
        default:
          description: ""
          schema:
            $ref: '#/definitions/gateway.Error'
      security:
      - Authorization: []
      - WorkspaceId: []
      tags:
      - endpoint
    get:
      parameters:
      - description: application id
        in: query
        name: app_id
        required: true
        type: string
      - description: endpoint id
        in: path
        name: ep_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.EndpointGetRes'
        default:
          description: ""
          schema:
            $ref: '#/definitions/gateway.Error'
      security:
      - Authorization: []
      - WorkspaceId: []
      tags:
      - endpoint
    patch:
      parameters:
      - description: endpoint id
        in: path
        name: ep_id
        required: true
        type: string
      - description: endpoint properties
        in: body
        name: props
        required: true
        schema:
          $ref: '#/definitions/rest.EndpointUpdateReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.EndpointUpdateRes'
        default:
          description: ""
          schema:
            $ref: '#/definitions/gateway.Error'
      security:
      - Authorization: []
      - WorkspaceId: []
      tags:
      - endpoint
  /message:
    post:
      parameters:
      - description: message properties
        in: body
        name: props
        required: true
        schema:
          $ref: '#/definitions/rest.MessageCreateReq'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/rest.MessageCreateRes'
        default:
          description: ""
          schema:
            $ref: '#/definitions/gateway.Error'
      security:
      - Authorization: []
      - WorkspaceId: []
      tags:
      - message
  /rule:
    get:
      parameters:
      - description: application id
        in: query
        name: app_id
        type: string
      - description: endpoint id
        in: query
        name: ep_id
        type: string
      - description: search keyword
        in: query
        name: _q
        type: string
      - default: 10
        description: limit returning records
        in: query
        name: _limit
        type: integer
      - default: 0
        description: current requesting page
        in: query
        name: _page
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.EndpointRuleListRes'
        default:
          description: ""
          schema:
            $ref: '#/definitions/gateway.Error'
      security:
      - Authorization: []
      - WorkspaceId: []
      tags:
      - endpoint rule
    post:
      parameters:
      - description: rule properties
        in: body
        name: props
        required: true
        schema:
          $ref: '#/definitions/rest.EndpointRuleCreateReq'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/rest.EndpointRuleCreateRes'
        default:
          description: ""
          schema:
            $ref: '#/definitions/gateway.Error'
      security:
      - Authorization: []
      - WorkspaceId: []
      tags:
      - endpoint rule
  /rule/{epr_id}:
    delete:
      parameters:
      - description: rule id
        in: path
        name: epr_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.EndpointRuleDeleteRes'
        default:
          description: ""
          schema:
            $ref: '#/definitions/gateway.Error'
      security:
      - Authorization: []
      - WorkspaceId: []
      tags:
      - endpoint rule
    get:
      parameters:
      - description: rule id
        in: path
        name: epr_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.EndpointRuleGetRes'
        default:
          description: ""
          schema:
            $ref: '#/definitions/gateway.Error'
      security:
      - Authorization: []
      - WorkspaceId: []
      tags:
      - endpoint rule
    patch:
      parameters:
      - description: rule id
        in: path
        name: epr_id
        required: true
        type: string
      - description: rule properties
        in: body
        name: props
        required: true
        schema:
          $ref: '#/definitions/rest.EndpointRuleUpdateReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.EndpointRuleUpdateRes'
        default:
          description: ""
          schema:
            $ref: '#/definitions/gateway.Error'
      security:
      - Authorization: []
      - WorkspaceId: []
      tags:
      - endpoint rule
produces:
- application/json
securityDefinitions:
  Authorization:
    description: '[Bearer JWT_TOKEN] or [Basic base64(key:secret)]'
    in: header
    name: Authorization
    type: apiKey
  WorkspaceId:
    description: The selected workspace id you are working with
    in: header
    name: x-authorization-workspace
    type: apiKey
swagger: "2.0"

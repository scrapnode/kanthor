# refs
redis_uri: &redis_uri redis://cache:6379/0
postgres_uri: &postgres_uri postgres://postgres:changemenow@warehouse/postgres?connect_timeout=30
nats_uri: &nats_uri nats://streaming:4222

# configurations
logger:
  pretty: true
  level: debug
  with:
    env: localhost

cryptography:
  kdf: {}
  symmetric:
    key: b16142af34f3235bf221f1f620bf59d1 # md5 hash of kanthor_root_key

sender:
  trace: true
  timeout: 10000 # 10s
  retry:
    count: 1
    wait_time: 5000 # 5s
    
circuit_breaker:
  close:
    cleanup_interval: 600000 # 10m
  half:
    passthrough_requests: 10
  open:
    duration: 1800000 # 30m
    conditions:
      error_consecutive: 10
      error_ratio: 0.5

idempotency:
  uri: *redis_uri
  time_to_live: 86400000 # 1 day

distributed_lock_manager:
  uri: *redis_uri
  time_to_live: 3600000 # 1h

cache:
  uri: *redis_uri
  time_to_live: 3600000 # 1h

authorizator:
  engine: casbin
  casbin:
    model_uri: file://./data/authorizator/casbin_rbac_model.conf
    policy_uri: *postgres_uri
    watcher: 
      uri: *nats_uri

metric:
  engine: noop

database:
  uri: *postgres_uri
  migration:
    source: file://./migration/database/sql

datastore:
  uri: *postgres_uri
  migration:
    source: file://./migration/datastore/sql

stream:
  name: main
  uri: *nats_uri
  nats:
    replicas: 0
    limits:
      msg_bytes: 32000
      msgs: 1000000
      bytes: 3200000000
      # 60*60*24*3 = 3d
      age: 259200
  publisher:
    timeout: 30000 # 30s
    rate_limit: 300
  subscriber:
    max_retry: 1
    timeout: 60000 # 60s
    concurrency: 1000

# application services
sdkapi:
  gateway:
    addr: :8180
  # the sdkapi has internal authenticator

portalapi:
  gateway:
    addr: :8280
  authenticator:
    engine: ask
    ask:
      access_key: kanthor_root_key
      secret_key: kanthor_root_password
      # base64(access_key:secret_key): a2FudGhvcl9yb290X2tleTprYW50aG9yX3Jvb3RfcGFzc3dvcmQ=
      
scheduler:
  request:
    schedule:
      timeout: 60000 # 60s

dispatcher:
  forwarder:
    send:
      concurrency: 300

storage:
  warehouse:
    put:
      timeout: 60000 # 60s
      size: 1000

attempt:
  trigger:
    planner:
      schedule: "*/15 * * * *"
      timeout: 600000 # 60s
      size: 10000
      scan_start: -324000 # 1h30m
      scan_end: -1800000 # 30m
    executor:
      timeout: 60000 # 60s
      size: 1
      attempt_delay: 1800000 # 30m

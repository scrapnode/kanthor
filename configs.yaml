# refs
redis_uri: &redis_uri redis://127.0.0.1:6379/0
postgres_uri: &postgres_uri postgres://postgres:changemenow@127.0.0.1/postgres?connect_timeout=30&sslmode=disable
nats_uri: &nats_uri nats://127.0.0.1:4222

logger:
  pretty: true
  level: debug
  with:
    env: localhost

database:
  uri: *postgres_uri
  migration:
    source: file://./data/migration/database/sql

datastore:
  uri: *postgres_uri
  migration:
    source: file://./data/migration/datastore/sql

# infrastructure
infrastructure:
  sender:
    trace: true
    timeout: 5000 # 5s
    retry:
      count: 1
      wait_time: 100 # 100ms

  circuit_breaker:
    close:
      cleanup_interval: 600000 # 10m
    half:
      passthrough_requests: 10
    open:
      duration: 1800000 # 30m
      conditions:
        error_consecutive: 10
        error_ratio: 0.5

  idempotency:
    uri: *redis_uri
    time_to_live: 900000 # 15m

  distributed_lock_manager:
    uri: *redis_uri
    time_to_live: 1800000 # 3m

  cache:
    uri: *redis_uri
    time_to_live: 43200000 # 12h

  authenticators:
    - engine: forward
      forward:
        uri: https://asia-southeast1-scrapnode-iam.cloudfunctions.net/api/auth/jwt/debug
        headers:
          - Content-Type
          - User-Agent
    - engine: ask
      ask:
        access_key: admin@kanthorlabs.com
        secret_key: changemenow
        # base64(key:secret): basic YWRtaW5Aa2FudGhvcmxhYnMuY29tOmNoYW5nZW1lbm93

  authorizator:
    engine: casbin
    casbin:
      model_uri: file://./data/authorizator/casbin_rbac_model.conf
      policy_uri: *postgres_uri
      watcher:
        uri: *nats_uri

  metric:
    engine: noop

  streaming:
    name: main
    uri: *nats_uri
    nats:
      replicas: 0
      limits:
        size: 25769803776 # 24Gi or 70% of 32Gi
        msg_size: 32768 # 32kb
        msg_count: 300000 # 300k per subject
        msg_age: 259200000 # 3d
    publisher:
      rate_limit: 300
    subscriber:
      max_retry: 1
      concurrency: 1000
      throughput: 30000

# services
sdk:
  gateway:
    addr: :8180
    timeout: 60000

portal:
  gateway:
    addr: :8280
    timeout: 60000

scheduler:
  request:
    schedule:
      timeout: 60000 # 60s

dispatcher:
  forwarder:
    send:
      concurrency: 500

storage:
  warehouse:
    put:
      timeout: 60000 # 60s
      size: 1000

attempt:
  trigger:
    planner:
      schedule: "*/30 * * * *"
      scan_start: -86400000 # 24h
      scan_end: -1800000 # 30m
      size: 500
    executor:
      timeout: 3600000 # 3h
      concurrency: 500
      arrange_delay: 1800000 # 30m
  endeavor:
    planner:
      schedule: "*/15 * * * *"
      scan_start: -86400000 # 24h
      scan_end: -1800000 # 30m
      size: 500
    executor:
      concurrency: 500
      reschedule_delay: 1800000 # 30m

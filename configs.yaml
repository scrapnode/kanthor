# common 
logger:
  pretty: true
  level: debug
  with:
    env: localhost

cryptography:
  kdf: {}
  symmetric:
    key: b16142af34f3235bf221f1f620bf59d1 # md5 hash of kanthor_root_key

idempotency:
  namespace: kanthor.idempotency
  uri: redis://127.0.0.1:6379/0
  time_to_live: 86400000 # 1 day

circuit_breaker:
  half_open_max_pass_through_requests: 5
  half_open_trigger_minimum_requests: 10
  half_open_trigger_error_threshold_ratio: 0.1
  open_state_duration: 1800000
  close_trigger_minimum_requests: 10
  close_trigger_error_threshold_ratio: 0.1
  close_state_clear_interval: 600000

distributed_lock_manager:
  namespace: kanthor.idempotency
  uri: redis://127.0.0.1:6379/0
  time_to_live: 3600000 # 1h

authorizator:
  engine: casbin
  casbin:
    model_uri: file://./data/authorizator/casbin_rbac_model.conf
    policy_uri: postgres://postgres:changemenow@127.0.0.1/postgres?connect_timeout=30&application_name=kanthor.authorizator
    policy_namespace: kanthor_authz

cache:
  uri: redis://127.0.0.1:6379/0
  time_to_live: 3600000 # 1h

metric:
  engine: otel
  otel:
    endpoint: localhost:4317
    interval: 15000
    labels:
      env: localhost

database:
  uri: postgres://postgres:changemenow@127.0.0.1/postgres?connect_timeout=30&application_name=kanthor.database
  migration:
    source: file://./migration/database/sql

datastore:
  uri: postgres://postgres:changemenow@127.0.0.1/postgres?connect_timeout=30&application_name=kanthor.datastore
  migration:
    source: file://./migration/datastore/sql

# shortcut
streaming: &streaming
  uri: nats://127.0.0.1:4222
  stream:
    name: default
    subjects:
      - kanthor.default.msg.>
      - kanthor.default.req.>
      - kanthor.default.res.>
      - kanthor.default.att.>
    replicas: 0
    limits:
      msg_bytes: 32000
      msgs: 1000000
      bytes: 3200000000
      # 60*60*24*3 = 3d
      age: 259200

# application services
sdkapi:
  gateway:
    engine: httpx
    httpx:
      addr: :8180
  publisher:
    connection: *streaming

portalapi:
  gateway:
    engine: httpx
    httpx:
      addr: :8280
  authenticator:
    engine: ask
    ask:
      access_key: kanthor_root_key
      secret_key: kanthor_root_password
      # base64(access_key:secret_key): a2FudGhvcl9yb290X2tleTprYW50aG9yX3Jvb3RfcGFzc3dvcmQ=
      
scheduler:
  publisher:
    connection: *streaming
  subscriber:
    connection: *streaming
    name: scheduler
    filter_subject: kanthor.default.msg.>
    max_retry: 3
    max_waiting: 100
    max_ack_pending: 100000
    max_ack_wating_duration: 15000
    max_request_batch: 1000
  request:
    schedule:
      rate_limit: 300
      timeout: 5000

dispatcher:
  publisher:
    connection: *streaming
  subscriber:
    connection: *streaming
    name: dispatcher
    filter_subject: kanthor.default.req.>
    max_retry: 3
    max_waiting: 100
    max_ack_pending: 100000
    max_ack_wating_duration: 15000
    max_request_batch: 1000
  sender:
    timeout: 3000
    retry:
      count: 1
      wait_time: 500
  forwarder:
    send:
      rate_limit: 300
      timeout: 5000

storage:
  subscriber:
    connection: *streaming
    name: storage
    filter_subject: kanthor.default.>
    max_retry: 3
    max_waiting: 100
    max_ack_pending: 100000
    max_ack_wating_duration: 15000
    max_request_batch: 1000
  warehouse:
    put:
      rate_limit: 3
      chunk_size: 500
      timeout: 5000

attempt:
  trigger:
    publisher:
      connection: *streaming
    subscriber:
      connection: *streaming
      name: attempt_trigger
      filter_subject: kanthor.default.att.trigger.>
      max_retry: 3
      max_waiting: 100
      max_ack_pending: 100000
      max_ack_wating_duration: 15000
      max_request_batch: 1000
    planner:
      schedule: "*/15 * * * *"
      rate_limit: 999999
      timeout: 5000
      scan_start: -324000 # 1h30m
      scan_end: -1800000 # 30m
    executor:
      rate_limit: 3
      timeout: 5000
      attempt_delay: 1800000 # 30m

// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package ioc

import (
	"github.com/scrapnode/kanthor/infrastructure/config"
	"github.com/scrapnode/kanthor/infrastructure/logging"
	config2 "github.com/scrapnode/kanthor/migration/config"
	"github.com/scrapnode/kanthor/migration/operators"
)

// Injectors from wire.go:

func InitializeMigrator(provider config.Provider) (operators.Operator, error) {
	configConfig, err := InitializeConfig(provider)
	if err != nil {
		return nil, err
	}
	logger, err := InitializeLogger(provider)
	if err != nil {
		return nil, err
	}
	operator := operators.New(configConfig, logger)
	return operator, nil
}

func InitializeConfig(provider config.Provider) (*config2.Config, error) {
	configConfig, err := config2.New(provider)
	if err != nil {
		return nil, err
	}
	return configConfig, nil
}

func InitializeLogger(provider config.Provider) (logging.Logger, error) {
	configConfig, err := InitializeConfig(provider)
	if err != nil {
		return nil, err
	}
	loggingConfig := ResolveLoggingConfig(configConfig)
	logger, err := logging.New(loggingConfig)
	if err != nil {
		return nil, err
	}
	return logger, nil
}

// wire.go:

func ResolveLoggingConfig(conf *config2.Config) *logging.Config {
	return &conf.Migration.Logger
}
